#  1. Реализовать практические задания на примере других таблиц и запросов.

-- Подключилсяк первой консоли
mysql> show schemas;
+----------------------------------+
| Database                         |
+----------------------------------+
| contries_and_cities_of_the_world |
| countries_and_cities             |
| employees                        |
| information_schema               |
| mysql                            |
| performance_schema               |
| sakila                           |
| sys                              |
| world                            |
+----------------------------------+
9 rows in set (0.00 sec)

-- переключился на базу данных employees
mysql> use employees;
Database changed

-- проверил какие таблицы присутствуюст в базе
mysql> show tables;
+---------------------+
| Tables_in_employees |
+---------------------+
| dates               |
| depart              |
| salary              |
| shtat               |
| shtat_info          |
+---------------------+
5 rows in set (0.00 sec)

-- заблокировал таблицу dates от записи. оставив только возмодность чтения
mysql> lock table `dates` read;
Query OK, 0 rows affected (0.00 sec)

-- подключился ко второй консоли и выбрал базу employees
mysql> use employees;
Database changed

-- пробный запрос из таблицы shtat
mysql> select * from `shtat`;
+----+--------------------+------------------------+------+----------+--------+
| id | name               | lastname               | dept | position | salary |
+----+--------------------+------------------------+------+----------+--------+
|  1 | Тарас              | Голомозый              |    1 | NULL     |  25000 |
|  2 | Антон              | Полонников             |    1 | NULL     |  35000 |
|  3 | Алена              | Звягинцева             |    1 | NULL     |  45000 |
|  4 | Владимир           | Питерский              |    1 | NULL     |  40000 |
|  5 | Анатолий           | Башлыков               |    3 | NULL     |  30000 |
|  6 | Ирина              | Кенина                 |    3 | NULL     |  50000 |
|  7 | Сергей             | Котельников            |    6 | NULL     |  45000 |
|  8 | Александр          | Розембаум              |    6 | NULL     |  60000 |
|  9 | Михаил             | Круг                   |    6 | NULL     |  28000 |
| 10 | Ирина              | Алегрова               |    4 | NULL     |  50000 |
| 15 | Антон              | Логинов                |    5 | NULL     |  35000 |
| 18 | Марина             | Влади                  |    1 | NULL     |  45000 |
+----+--------------------+------------------------+------+----------+--------+
12 rows in set (0.00 sec)

-- запрос на чтени из таблицы dates. таблицца заблокированна, но читать из нее можно 
mysql> select * from `dates`;
+----+---------+------------+----------+
| id | sotr_id | start_date | end_date |
+----+---------+------------+----------+
|  1 |       1 | 2019-03-02 | NULL     |
|  2 |       2 | 2019-03-02 | NULL     |
|  3 |       3 | 2019-03-02 | NULL     |
|  4 |       4 | 2019-03-02 | NULL     |
|  5 |       5 | 2019-03-02 | NULL     |
|  6 |       6 | 2019-03-02 | NULL     |
|  7 |      10 | 2019-03-02 | NULL     |
|  8 |       7 | 2019-03-02 | NULL     |
|  9 |       8 | 2019-03-02 | NULL     |
| 10 |       9 | 2019-03-02 | NULL     |
| 16 |      15 | 2019-03-02 | NULL     |
| 19 |      18 | 2019-03-03 | NULL     |
| 20 |      18 | 2019-03-04 | NULL     |
+----+---------+------------+----------+
13 rows in set (0.00 sec)

-- попробовал удалить запись с идентификатором 20, на консоль не вывела никакой информации
-- и зависла в режиме ожидания
mysql> delete from `dates` where id = 20;

-- после этого переключился на первую консоль и разблокировал все  
mysql> unlock tables;
Query OK, 0 rows affected (0.00 sec)

-- после чего во второй консоли увидет запись к запросу об удалении строки с идентификатором 20
Query OK, 1 row affected (57.55 sec)


#  2. Подумать, какие операции являются транзакционными, и написать несколько примеров с
# транзакционными запросами.

ALTER TABLE `salary`
ADD COLUMN `comment` VARCHAR(255);

# выключаем автокоммиты
SET AUTOCOMMIT = 0;

# выставляем нужный уровень изоляций
SET transaction_isolation = SERIALIZABLE;

# создаем транзакцию
-- получаем среднюю зарплату по штату и выплачиваем от нее премию 150%
-- сотруднику с минимальной ЗП
BEGIN;
SELECT @a := (SELECT AVG(`salary`) FROM `shtat`);
SELECT @b := (SELECT `id` FROM `shtat` WHERE `salary` = (SELECT MIN(`salary`) FROM `shtat`));
INSERT INTO `salary` 
(`sotr_id`,`salary`,`comment`) VALUES
(@b, @a * 1.5, 'Выплата 150 процентов от средней ЗП');

COMMIT;

SET AUTOCOMMIT = 1; 
-- проверяем добавление записи
SELECT * FROM `salary`;

# 3. Проанализировать несколько запросов с помощью EXPLAIN.
-- выбрал БД с которой буду работать 
mysql> use employees;
Database changed
-- запустил анализ по таблице shtat
mysql> explain select * from shtat;
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+
| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+
|  1 | SIMPLE      | shtat | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   12 |   100.00 | NULL  |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+
1 row in set, 1 warning (0.10 sec)

-- затем добавил условие в запрос по имении фамилии
-- видно что запрос перебирает все строки из-за чего очень низкая скорость поиска
mysql> explain select * from `shtat` where `name` = 'Александр' and lastname = 'Розембаум' ;
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
|  1 | SIMPLE      | shtat | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   12 |     8.33 | Using where |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
1 row in set, 1 warning (0.00 sec)

-- добавил объединенный индекс на имя и фамилию в таблицу shtat
mysql> create index `fullname` on `shtat`(`name`,`lastname`);
Query OK, 0 rows affected (0.47 sec)
Records: 0  Duplicates: 0  Warnings: 0

-- после чего запустил еще раз анализ запроса с условиями
-- из таблицы анализа видно что значение теперь находится значительно быстрее
mysql> explain select * from `shtat` where `name` = 'Александр' and lastname = 'Розембаум' ;
+----+-------------+-------+------------+------+---------------+----------+---------+-------------+------+----------+-------+
| id | select_type | table | partitions | type | possible_keys | key      | key_len | ref         | rows | filtered | Extra |
+----+-------------+-------+------------+------+---------------+----------+---------+-------------+------+----------+-------+
|  1 | SIMPLE      | shtat | NULL       | ref  | fullname      | fullname | 204     | const,const |    1 |   100.00 | NULL  |
+----+-------------+-------+------------+------+---------------+----------+---------+-------------+------+----------+-------+
1 row in set, 1 warning (0.00 sec)


-- следующим шагом решил проверит представление
-- запутил анализ простого запроса, из которого видно , что таблицы shtat  и  depart связаны хорошо
-- а вот связь с таблицей  dates не очень хорошая 
mysql> explain select * from `shtat_info`;
+----+-------------+-------+------------+--------+---------------+---------+---------+------------------+------+----------+----------------------------------------------------+
| id | select_type | table | partitions | type   | possible_keys | key     | key_len | ref              | rows | filtered | Extra                                              |
+----+-------------+-------+------------+--------+---------------+---------+---------+------------------+------+----------+----------------------------------------------------+
|  1 | SIMPLE      | s     | NULL       | ALL    | NULL          | NULL    | NULL    | NULL             |   12 |   100.00 | NULL                                               |
|  1 | SIMPLE      | d     | NULL       | eq_ref | PRIMARY       | PRIMARY | 4       | employees.s.dept |    1 |   100.00 | NULL                                               |
|  1 | SIMPLE      | dates | NULL       | ALL    | NULL          | NULL    | NULL    | NULL             |   12 |   100.00 | Using where; Using join buffer (Block Nested Loop) |
+----+-------------+-------+------------+--------+---------------+---------+---------+------------------+------+----------+----------------------------------------------------+
3 rows in set, 1 warning (0.00 sec)

-- для примера вывел данные из представления
mysql> select * from `shtat_info`;
+------------------------+--------------------+-----------------------------------+------------+-------------------------------------------------------+
| lastname               | name               | department                        | start_date | end_date                                              |
+------------------------+--------------------+-----------------------------------+------------+-------------------------------------------------------+
| Голомозый              | Тарас              | IT                                | 2019-03-02 | Работает на сегодняшний день                          |
| Полонников             | Антон              | IT                                | 2019-03-02 | Работает на сегодняшний день                          |
| Звягинцева             | Алена              | IT                                | 2019-03-02 | Работает на сегодняшний день                          |
| Питерский              | Владимир           | IT                                | 2019-03-02 | Работает на сегодняшний день                          |
| Башлыков               | Анатолий           | Маркетинг                         | 2019-03-02 | Работает на сегодняшний день                          |
| Кенина                 | Ирина              | Маркетинг                         | 2019-03-02 | Работает на сегодняшний день                          |
| Алегрова               | Ирина              | Бухгалтерия                       | 2019-03-02 | Работает на сегодняшний день                          |
| Котельников            | Сергей             | Контроль качества                 | 2019-03-02 | Работает на сегодняшний день                          |
| Розембаум              | Александр          | Контроль качества                 | 2019-03-02 | Работает на сегодняшний день                          |
| Круг                   | Михаил             | Контроль качества                 | 2019-03-02 | Работает на сегодняшний день                          |
| Логинов                | Антон              | Охрана                            | 2019-03-02 | Работает на сегодняшний день                          |
| Влади                  | Марина             | IT                                | 2019-03-03 | Работает на сегодняшний день                          |
+------------------------+--------------------+-----------------------------------+------------+-------------------------------------------------------+
12 rows in set (0.00 sec)

-- добавил в запрос к анализу условия поиска по имени и фамилии в представлении
-- результат как и с обычным запросом показывает что с таблицей  dates связь не очень хорошая
mysql> explain select * from `shtat_info` where `name` = 'Александр' and lastname = 'Розембаум' ;
+----+-------------+-------+------------+--------+---------------+----------+---------+------------------+------+----------+----------------------------------------------------+
| id | select_type | table | partitions | type   | possible_keys | key      | key_len | ref              | rows | filtered | Extra                                              |
+----+-------------+-------+------------+--------+---------------+----------+---------+------------------+------+----------+----------------------------------------------------+
|  1 | SIMPLE      | s     | NULL       | ref    | fullname      | fullname | 204     | const,const      |    1 |   100.00 | NULL                                               |
|  1 | SIMPLE      | d     | NULL       | eq_ref | PRIMARY       | PRIMARY  | 4       | employees.s.dept |    1 |   100.00 | NULL                                               |
|  1 | SIMPLE      | dates | NULL       | ALL    | NULL          | NULL     | NULL    | NULL             |   12 |   100.00 | Using where; Using join buffer (Block Nested Loop) |
+----+-------------+-------+------------+--------+---------------+----------+---------+------------------+------+----------+----------------------------------------------------+
3 rows in set, 1 warning (0.00 sec)


-- для таблицы dates создал индекс на столбец sotr_id в workbench 
--после чего запустил простой запрос из представления на анализ
-- в результате чего видно что предупреждение о плохой связи с таблицей dates пропало
mysql> explain select * from `shtat_info`;
+----+-------------+-------+------------+--------+---------------+---------+---------+------------------+------+----------+-------+
| id | select_type | table | partitions | type   | possible_keys | key     | key_len | ref              | rows | filtered | Extra |
+----+-------------+-------+------------+--------+---------------+---------+---------+------------------+------+----------+-------+
|  1 | SIMPLE      | s     | NULL       | ALL    | NULL          | NULL    | NULL    | NULL             |   12 |   100.00 | NULL  |
|  1 | SIMPLE      | d     | NULL       | eq_ref | PRIMARY       | PRIMARY | 4       | employees.s.dept |    1 |   100.00 | NULL  |
|  1 | SIMPLE      | dates | NULL       | ref    | SORT          | SORT    | 4       | employees.s.id   |    1 |   100.00 | NULL  |
+----+-------------+-------+------------+--------+---------------+---------+---------+------------------+------+----------+-------+
3 rows in set, 1 warning (0.00 sec)


-- Анализ запроса из представления по имени и фамилии, после добавления индекса, тоже выглядит хорошо
mysql> explain select * from `shtat_info` where `name` = 'Александр' and lastname = 'Розембаум' ;
+----+-------------+-------+------------+--------+---------------+----------+---------+------------------+------+----------+-------+
| id | select_type | table | partitions | type   | possible_keys | key      | key_len | ref              | rows | filtered | Extra |
+----+-------------+-------+------------+--------+---------------+----------+---------+------------------+------+----------+-------+
|  1 | SIMPLE      | s     | NULL       | ref    | fullname      | fullname | 204     | const,const      |    1 |   100.00 | NULL  |
|  1 | SIMPLE      | d     | NULL       | eq_ref | PRIMARY       | PRIMARY  | 4       | employees.s.dept |    1 |   100.00 | NULL  |
|  1 | SIMPLE      | dates | NULL       | ref    | SORT          | SORT     | 4       | employees.s.id   |    1 |   100.00 | NULL  |
+----+-------------+-------+------------+--------+---------------+----------+---------+------------------+------+----------+-------+
3 rows in set, 1 warning (0.00 sec)




